{"ast":null,"code":"var _jsxFileName = \"/Users/jaleelwhaley/Desktop/deck-of-cards/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from \"axios\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { Draw } from './Draw';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const deckId = useRef();\n  const [newDeck, setNewDeck] = useState([]);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [click, setClick] = useState(null);\n  const [cardsRemaining, setCardsRemaining] = useState();\n  const [buttonText, setButtonText] = useState('draw');\n  const interval = useRef();\n  // on button click, update the button text + stop or continue the interval\n\n  const onButtonClick = () => {\n    if (!deckId.current) return;\n    // check if timer is stopped\n    const isStopped = interval.current === undefined;\n    if (isStopped) {\n      // set the interval\n      interval.current = setInterval(() => {\n        const url = \"https://deckofcardsapi.com/api/deck/\".concat(deckId.current, \"/draw/?count=1\");\n        // make the request\n        axios.get(url).then(res => {\n          //store the remaining cards\n          setCardsRemaining(res.data.remaining);\n          if (res.data.remaining <= 0) {\n            // finish the game\n            setIsGameOver(true);\n            clearInterval(interval.current);\n            alert(\"GAME OVER\");\n            return;\n          }\n          // add new card to the deck\n          const newCard = res.data.cards[0];\n          setNewDeck(prev => [...prev, newCard]);\n        });\n      }, 100);\n      setButtonText('stop drawing');\n    } else {\n      clearInterval(interval.current);\n      // stop the in\n      interval.current = undefined;\n      setButtonText('start drawing');\n    }\n  };\n  useEffect(() => {\n    axios.get('https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1').then(res => {\n      deckId.current = res.data.deck_id;\n    });\n  }, []);\n\n  // const draw = () => {\n  //   if (!deckId.current) return\n\n  //   interval.current = setInterval(() => {\n  //     const url = `https://deckofcardsapi.com/api/deck/${deckId.current}/draw/?count=1`\n  //     axios.get(url).then((res) => {\n  //       setCardsRemaining(res.data.remaining)\n  //       if (res.data.remaining <= 0) {\n  //         setIsGameOver(true);\n  //         console.log('interval', interval)\n  //         clearInterval(interval)\n  //         alert(\"GAME OVER\")\n  //         return\n  //       }\n  //       const newCard = res.data.cards[0];\n  //       setNewDeck(prev => [...prev, newCard]);\n  //     })\n  //   }, 100);\n  // };\n\n  // useEffect(() => {\n  //   // draw();\n  //   // return () => { clearInterval(draw())} \n  //   console.log('deck id', deckId.current)\n  // }, [deckId.current])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [console.log(\"how many times will this render\"), !isGameOver ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" START \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"game Over\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 41\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onButtonClick,\n      children: [\" \", buttonText, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), newDeck.map((card, i) => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [card.code, \" - \", i]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XexxDgLUlWkeVdtrOT7lWaqRBCc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","logo","Draw","jsxDEV","_jsxDEV","App","_s","deckId","newDeck","setNewDeck","isGameOver","setIsGameOver","click","setClick","cardsRemaining","setCardsRemaining","buttonText","setButtonText","interval","onButtonClick","current","isStopped","undefined","setInterval","url","concat","get","then","res","data","remaining","clearInterval","alert","newCard","cards","prev","deck_id","className","children","console","log","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","card","i","code","_c","$RefreshReg$"],"sources":["/Users/jaleelwhaley/Desktop/deck-of-cards/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from \"axios\"\nimport logo from './logo.svg';\nimport './App.css';\nimport { Draw } from './Draw';\nfunction App() {\n  const deckId = useRef()\n\n  const [newDeck, setNewDeck] = useState([]);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [click, setClick] = useState(null);\n  const [cardsRemaining, setCardsRemaining] = useState()\n  const [buttonText, setButtonText] = useState('draw')\n  const interval = useRef()\n  // on button click, update the button text + stop or continue the interval\n\n  const onButtonClick = () => {\n    if (!deckId.current) return\n    // check if timer is stopped\n    const isStopped = interval.current === undefined\n    if (isStopped) {\n      // set the interval\n      interval.current = setInterval(() => {\n        const url = `https://deckofcardsapi.com/api/deck/${deckId.current}/draw/?count=1`\n        // make the request\n        axios.get(url).then((res) => {\n          //store the remaining cards\n          setCardsRemaining(res.data.remaining)\n\n          if (res.data.remaining <= 0) {\n            // finish the game\n            setIsGameOver(true);\n            clearInterval(interval.current)\n            alert(\"GAME OVER\")\n            return\n          }\n          // add new card to the deck\n          const newCard = res.data.cards[0];\n          setNewDeck(prev => [...prev, newCard]);\n        })\n      }, 100);\n      setButtonText('stop drawing')\n    } else {\n      clearInterval(interval.current)\n      // stop the in\n      interval.current = undefined\n      setButtonText('start drawing')\n    }\n\n  }\n  useEffect(() => {\n    axios.get('https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1')\n      .then((res) => {\n        deckId.current = (res.data.deck_id);\n      })\n  }, []);\n\n  // const draw = () => {\n  //   if (!deckId.current) return\n\n  //   interval.current = setInterval(() => {\n  //     const url = `https://deckofcardsapi.com/api/deck/${deckId.current}/draw/?count=1`\n  //     axios.get(url).then((res) => {\n  //       setCardsRemaining(res.data.remaining)\n  //       if (res.data.remaining <= 0) {\n  //         setIsGameOver(true);\n  //         console.log('interval', interval)\n  //         clearInterval(interval)\n  //         alert(\"GAME OVER\")\n  //         return\n  //       }\n  //       const newCard = res.data.cards[0];\n  //       setNewDeck(prev => [...prev, newCard]);\n  //     })\n  //   }, 100);\n  // };\n\n  // useEffect(() => {\n  //   // draw();\n  //   // return () => { clearInterval(draw())} \n  //   console.log('deck id', deckId.current)\n  // }, [deckId.current])\n\n  return (\n    <div className=\"App\">\n      {console.log(\"how many times will this render\")}\n      {!isGameOver ? <h2> START </h2> : <h2>game Over</h2>}\n\n      <button onClick={onButtonClick}> {buttonText} </button>\n      {newDeck.map((card, i) => {\n        return (\n\n          <p>\n            {card.code} - {i}\n          </p>\n        )\n      })}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}