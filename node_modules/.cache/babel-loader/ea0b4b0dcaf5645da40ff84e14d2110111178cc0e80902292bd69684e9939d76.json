{"ast":null,"code":"var _jsxFileName = \"/Users/jaleelwhaley/Desktop/deck-of-cards/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from \"axios\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const deckId = useRef();\n  const [newDeck, setNewDeck] = useState([]);\n  const [isGameOver, setIsGameOver] = useState(false);\n  useEffect(() => {\n    axios.get('https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1').then(res => {\n      deckId.current = res.data.deck_id;\n    });\n  }, []);\n  useEffect(() => {\n    setInterval(() => {\n      const url = \"https://deckofcardsapi.com/api/deck/\".concat(deckId.current, \"/draw/?count=1\");\n      axios.get * url.then(res => {\n        const newCard = res.data.cards[0];\n        setNewDeck(prev => []);\n      });\n    }, 1000);\n  }, []);\n  const Draw = () => {\n    const url = \"https://deckofcardsapi.com/api/deck/\".concat(deckId.current, \"/draw/?count=1\");\n    axios.get(url).then(res => {\n      const newCard = res.data.cards[0];\n      setNewDeck(prev => [...prev, newCard]);\n      console.log(newDeck);\n      if (res.data.remaining === 0) {\n        setIsGameOver(true);\n        alert('game over');\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: Draw,\n      children: \" draw \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), newDeck.map(card => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: card.code\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xcoQlpeJWzDy+D+FxyNWxL3Hf4A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","logo","jsxDEV","_jsxDEV","App","_s","deckId","newDeck","setNewDeck","isGameOver","setIsGameOver","get","then","res","current","data","deck_id","setInterval","url","concat","newCard","cards","prev","Draw","console","log","remaining","alert","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","card","code","_c","$RefreshReg$"],"sources":["/Users/jaleelwhaley/Desktop/deck-of-cards/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from \"axios\"\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  const deckId = useRef()\n\n  const [newDeck, setNewDeck] = useState([])\n  const [isGameOver, setIsGameOver] = useState(false)\n\n  useEffect(() => {\n    axios.get('https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1').then((res) => {\n      deckId.current = (res.data.deck_id);\n    })\n  }, [])\n\n\n\n  useEffect(() => {\n    setInterval(() => {\n      const url = `https://deckofcardsapi.com/api/deck/${deckId.current}/draw/?count=1`\n      axios.get * (url).then((res) => {\n        const newCard = res.data.cards[0];\n        setNewDeck(prev => [])\n      })\n    },1000)\n   \n  }, [])\n\n  const Draw = () => {\n    const url = `https://deckofcardsapi.com/api/deck/${deckId.current}/draw/?count=1`\n    axios.get(url).then((res) => {\n      const newCard = res.data.cards[0]\n      setNewDeck(prev => [...prev, newCard])\n      console.log(newDeck);\n      if (res.data.remaining === 0) {\n        setIsGameOver(true)\n        alert('game over')\n      }\n    })\n\n  }\n\n\n  return (\n    <div className=\"App\">\n      <button onClick={Draw}> draw </button>\n      {newDeck.map((card) => {\n        return (\n          <p>{card.code}</p>\n        )\n      })}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,MAAM,GAAGP,MAAM,CAAC,CAAC;EAEvB,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACdE,KAAK,CAACW,GAAG,CAAC,+DAA+D,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;MACvFP,MAAM,CAACQ,OAAO,GAAID,GAAG,CAACE,IAAI,CAACC,OAAQ;IACrC,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAINlB,SAAS,CAAC,MAAM;IACdmB,WAAW,CAAC,MAAM;MAChB,MAAMC,GAAG,0CAAAC,MAAA,CAA0Cb,MAAM,CAACQ,OAAO,mBAAgB;MACjFd,KAAK,CAACW,GAAG,GAAIO,GAAG,CAAEN,IAAI,CAAEC,GAAG,IAAK;QAC9B,MAAMO,OAAO,GAAGP,GAAG,CAACE,IAAI,CAACM,KAAK,CAAC,CAAC,CAAC;QACjCb,UAAU,CAACc,IAAI,IAAI,EAAE,CAAC;MACxB,CAAC,CAAC;IACJ,CAAC,EAAC,IAAI,CAAC;EAET,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,IAAI,GAAGA,CAAA,KAAM;IACjB,MAAML,GAAG,0CAAAC,MAAA,CAA0Cb,MAAM,CAACQ,OAAO,mBAAgB;IACjFd,KAAK,CAACW,GAAG,CAACO,GAAG,CAAC,CAACN,IAAI,CAAEC,GAAG,IAAK;MAC3B,MAAMO,OAAO,GAAGP,GAAG,CAACE,IAAI,CAACM,KAAK,CAAC,CAAC,CAAC;MACjCb,UAAU,CAACc,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEF,OAAO,CAAC,CAAC;MACtCI,OAAO,CAACC,GAAG,CAAClB,OAAO,CAAC;MACpB,IAAIM,GAAG,CAACE,IAAI,CAACW,SAAS,KAAK,CAAC,EAAE;QAC5BhB,aAAa,CAAC,IAAI,CAAC;QACnBiB,KAAK,CAAC,WAAW,CAAC;MACpB;IACF,CAAC,CAAC;EAEJ,CAAC;EAGD,oBACExB,OAAA;IAAKyB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB1B,OAAA;MAAQ2B,OAAO,EAAEP,IAAK;MAAAM,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACrC3B,OAAO,CAAC4B,GAAG,CAAEC,IAAI,IAAK;MACrB,oBACEjC,OAAA;QAAA0B,QAAA,EAAIO,IAAI,CAACC;MAAI;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAEtB,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC7B,EAAA,CAlDQD,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AAoDZ,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}