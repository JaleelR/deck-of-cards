{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import  axios  from \"axios\";\n// export const Draw = (draw) => {\n//     useEffect(() => {\n//        const intervalId =  setInterval(() => {\n//             const url = `https://deckofcardsapi.com/api/deck/${deckId.current}/draw/?count=1`\n//             axios.get(url).then((res) => {\n//                 if (res.data.remaining === 0) {\n//                     setIsGameOver(true);\n//                 };\n//                 const newCard = res.data.cards[0];\n//                 setNewDeck(prev => [...prev, newCard]);\n//             })\n//         }, 1000)\n//         return () => clearInterval(intervalId);\n//     }, [])\n\n// }","map":{"version":3,"names":[],"sources":["/Users/jaleelwhaley/Desktop/deck-of-cards/src/Draw.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import  axios  from \"axios\";\n// export const Draw = (draw) => {\n//     useEffect(() => {\n//        const intervalId =  setInterval(() => {\n//             const url = `https://deckofcardsapi.com/api/deck/${deckId.current}/draw/?count=1`\n//             axios.get(url).then((res) => {\n//                 if (res.data.remaining === 0) {\n//                     setIsGameOver(true);\n//                 };\n//                 const newCard = res.data.cards[0];\n//                 setNewDeck(prev => [...prev, newCard]);\n//             })\n//         }, 1000)\n//         return () => clearInterval(intervalId);\n//     }, [])\n\n\n// }"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA"},"metadata":{},"sourceType":"module","externalDependencies":[]}