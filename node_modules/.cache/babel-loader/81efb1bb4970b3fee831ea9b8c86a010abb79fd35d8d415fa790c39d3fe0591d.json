{"ast":null,"code":"var _jsxFileName = \"/Users/jaleelwhaley/Desktop/deck-of-cards/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from \"axios\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const deckId = useRef();\n  const [deck, setDeck] = useState([]);\n  getId();\n  const draw = () => {\n    \"https://deckofcardsapi.com/api/deck/<<deck_id>>/draw/?count=2\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      Onclick: draw,\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uEgI9ZRVjsaQBbkrN75S9P29C0c=\");\n_c = App;\nconst getId = () => {\n  axios.get('https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1').then(res => {\n    deckId.current = res.data.deck_id;\n  });\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","logo","jsxDEV","_jsxDEV","App","_s","deckId","deck","setDeck","getId","draw","className","children","Onclick","fileName","_jsxFileName","lineNumber","columnNumber","_c","get","then","res","current","data","deck_id","$RefreshReg$"],"sources":["/Users/jaleelwhaley/Desktop/deck-of-cards/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef} from 'react';\nimport axios from \"axios\"\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  const deckId = useRef()\n\n  const [deck, setDeck] = useState([])\n\n    getId()\n  \n  const draw = () => {\n    \"https://deckofcardsapi.com/api/deck/<<deck_id>>/draw/?count=2\"\n}\n  return (\n    <div className=\"App\">\n    <button Onclick={draw}> </button>\n    </div>\n  );\n}\nconst getId = () => {\n  axios.get('https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1').then((res) => {\n    deckId.current = res.data.deck_id;\n  })\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAO,OAAO;AACzD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,MAAM,GAAGP,MAAM,CAAC,CAAC;EAEvB,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAElCY,KAAK,CAAC,CAAC;EAET,MAAMC,IAAI,GAAGA,CAAA,KAAM;IACjB,+DAA+D;EACnE,CAAC;EACC,oBACEP,OAAA;IAAKQ,SAAS,EAAC,KAAK;IAAAC,QAAA,eACpBT,OAAA;MAAQU,OAAO,EAAEH,IAAK;MAAAE,QAAA,EAAC;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEV;AAACZ,EAAA,CAfQD,GAAG;AAAAc,EAAA,GAAHd,GAAG;AAgBZ,MAAMK,KAAK,GAAGA,CAAA,KAAM;EAClBT,KAAK,CAACmB,GAAG,CAAC,+DAA+D,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;IACvFf,MAAM,CAACgB,OAAO,GAAGD,GAAG,CAACE,IAAI,CAACC,OAAO;EACnC,CAAC,CAAC;AACJ,CAAC;AAED,eAAepB,GAAG;AAAC,IAAAc,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}